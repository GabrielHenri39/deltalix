# Generated by Django 5.2.4 on 2025-09-06 17:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('blocked_until', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('last_attempt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Categoria de Serviço',
                'verbose_name_plural': 'Categorias de Serviços',
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(help_text='E-mail para contato relacionado ao serviço', max_length=254, verbose_name='E-mail')),
                ('telefone', models.CharField(help_text='Telefone para contato relacionado ao serviço', max_length=15, verbose_name='Telefone')),
                ('cep', models.CharField(help_text='CEP relacionado ao serviço', max_length=10, verbose_name='CEP')),
                ('cidade', models.CharField(help_text='Cidade relacionada ao serviço', max_length=100, verbose_name='Cidade')),
                ('bairro', models.CharField(help_text='Bairro relacionado ao serviço', max_length=100, verbose_name='Bairro')),
                ('rua', models.CharField(help_text='Rua relacionada ao serviço', max_length=100, verbose_name='Rua')),
                ('numero', models.CharField(help_text='Número do local relacionado ao serviço', max_length=10, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, help_text='Complemento do endereço relacionado ao serviço', max_length=100, null=True, verbose_name='Complemento')),
                ('ativo', models.BooleanField(default=True)),
                ('protocolo', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Protocolo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, help_text='Data em que o serviço foi criado', verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, help_text='Data da última atualização do serviço', verbose_name='Data de Atualização')),
                ('status', models.CharField(choices=[('em_andamento', 'Em Andamento'), ('em_analise', 'Em Análise'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='em_analise', max_length=20)),
                ('categoria', models.ManyToManyField(help_text='Selecione a categoria do serviço', to='services.categoriaservico', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['-data_criacao', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='AnexosServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='anexos_servico/')),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos', to='services.servico')),
            ],
            options={
                'verbose_name': 'Anexo de Serviço',
                'verbose_name_plural': 'Anexos de Serviços',
                'ordering': ['-data_upload'],
            },
        ),
    ]
